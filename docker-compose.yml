services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - alertmanager
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      # - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped

  debian-agent:
    build:
      context: .
      dockerfile: docker/debian/Dockerfile
    hostname: debian-agent
    volumes:
      - ./scripts:/opt/hardening/scripts:ro
      - ./atomic-red-team:/opt/hardening/atomic-red-team:ro
      - ./art-storage:/var/lib/hardening/art-storage
      - ./art-storage/results:/var/lib/hardening/results
    environment:
      RUN_HARDENING_ON_START: ${RUN_HARDENING_ON_START:-false}
      ATOMIC_DRY_RUN: ${ATOMIC_DRY_RUN:-true}
      HARDENING_RESULTS_DIR: /var/lib/hardening/results/debian

  ubuntu-agent:
    build:
      context: .
      dockerfile: docker/ubuntu/Dockerfile
    hostname: ubuntu-agent
    volumes:
      - ./scripts:/opt/hardening/scripts:ro
      - ./atomic-red-team:/opt/hardening/atomic-red-team:ro
      - ./art-storage:/var/lib/hardening/art-storage
      - ./art-storage/results:/var/lib/hardening/results
    environment:
      RUN_HARDENING_ON_START: ${RUN_HARDENING_ON_START:-false}
      ATOMIC_DRY_RUN: ${ATOMIC_DRY_RUN:-true}
      HARDENING_RESULTS_DIR: /var/lib/hardening/results/ubuntu

  fedora-agent:
    build:
      context: .
      dockerfile: docker/fedora/Dockerfile
    hostname: fedora-agent
    volumes:
      - ./scripts:/opt/hardening/scripts:ro
      - ./atomic-red-team:/opt/hardening/atomic-red-team:ro
      - ./art-storage:/var/lib/hardening/art-storage
      - ./art-storage/results:/var/lib/hardening/results
    environment:
      RUN_HARDENING_ON_START: ${RUN_HARDENING_ON_START:-false}
      ATOMIC_DRY_RUN: ${ATOMIC_DRY_RUN:-true}
      HARDENING_RESULTS_DIR: /var/lib/hardening/results/fedora

  centos-agent:
    build:
      context: .
      dockerfile: docker/centos/Dockerfile
    hostname: centos-agent
    volumes:
      - ./scripts:/opt/hardening/scripts:ro
      - ./atomic-red-team:/opt/hardening/atomic-red-team:ro
      - ./art-storage:/var/lib/hardening/art-storage
      - ./art-storage/results:/var/lib/hardening/results
    environment:
      RUN_HARDENING_ON_START: ${RUN_HARDENING_ON_START:-false}
      ATOMIC_DRY_RUN: ${ATOMIC_DRY_RUN:-true}
      HARDENING_RESULTS_DIR: /var/lib/hardening/results/centos

volumes:
  prometheus_data:
  grafana_data:
