name: CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.environment == 'staging' || github.event_name == 'push'
    environment:
      name: staging
      url: https://staging.example.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read VERSION
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Deploy to staging
        run: |
          echo "Deploying version ${{ steps.version.outputs.VERSION }} to staging"
          # Add actual deployment commands here
          # Example: kubectl apply -f k8s/staging/
          # Or: docker-compose -f docker-compose.staging.yml up -d

      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          # Add smoke test commands
          sleep 30
          curl -f https://staging.example.com/health || exit 1

      - name: Notify deployment
        if: always()
        run: |
          echo "Deployment status: ${{ job.status }}"
          # Add notification to Slack/Teams/etc

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://production.example.com
    needs: []  # Add staging deployment as prerequisite if needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read VERSION
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Create backup
        run: |
          echo "Creating backup before deployment..."
          # Add backup commands
          # Example: ./scripts/backup.sh

      - name: Deploy to production
        run: |
          echo "Deploying version ${{ steps.version.outputs.VERSION }} to production"
          # Add actual deployment commands here
          # Example: kubectl apply -f k8s/production/
          # Or: docker-compose -f docker-compose.prod.yml up -d

      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          sleep 60
          curl -f https://production.example.com/health || exit 1

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, rolling back..."
          # Add rollback commands

      - name: Notify deployment
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Production deployment ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
