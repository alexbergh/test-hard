name: codex-wazuh

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  codex:
    runs-on: ubuntu-latest
    env:
      # УНИКАЛЬНОЕ имя проекта compose, чтобы гарантированно отбросить старые сущности
      COMPOSE_PROJECT_NAME: wazuh-new
      WAZUH_INDEXER_PASSWORD: ${{ secrets.WAZUH_INDEXER_PASSWORD }}
      WAZUH_API_PASSWORD:     ${{ secrets.WAZUH_API_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure docker compose
        run: |
          docker version
          docker compose version

      # --- Готовим конфиги и политику безопасности для OpenSearch ---
      - name: Prepare config files
        run: |
          mkdir -p config/wazuh-indexer config/wazuh-indexer/certs config/wazuh-manager
          # Политика даёт явное право читать /etc/wazuh-indexer/certs/*
          cat > config/wazuh-indexer/opensearch-custom.yml << 'EOF_POLICY'
          opensearch.security.manager.java.policy: |
            grant {
              permission java.io.FilePermission "/usr/share/wazuh-indexer/config/-", "read";
              permission java.io.FilePermission "/etc/wazuh-indexer/certs/-", "read";
            };
          EOF_POLICY

      # --- Нормализуем права на сертификаты (фикc №1) ---
      - name: Fix certificate ownership and permissions (host side)
        run: |
          # если файлов нет — пропускаем; в вашем пайплайне сюда кладутся реальные *.pem/*.key
          shopt -s nullglob
          for f in config/wazuh-indexer/certs/*.pem; do chmod 644 "$f"; done
          for f in config/wazuh-indexer/certs/*.key; do chmod 600 "$f"; done
          # uid/gid 1000 — типичная учётка процесса внутри контейнера wazuh-indexer
          sudo chown -R 1000:1000 config/wazuh-indexer/certs || true

      # --- Полная зачистка старых контейнеров/томов/осиротевших ресурсов (фикc №2) ---
      - name: Hard cleanup
        run: |
          docker compose -f docker-compose.yml down --volumes --remove-orphans || true
          docker volume prune -f || true
          docker network prune -f || true

      # --- Создаём/обновляем docker-compose c НОВЫМИ именами контейнеров (фикc №3) ---
      - name: Write compose file with new container names
        run: |
          cat > docker-compose.yml << 'YAML'
          version: '3.8'
          services:
            wazuh-indexer:
              image: wazuh/wazuh-indexer:4.13.1
              container_name: wazuh-indexer-new
              restart: unless-stopped
              ports: ["9200:9200"]
              environment:
                - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
                - DISABLE_SECURITY_PLUGIN=false
              volumes:
                - wazuh-indexer-data:/var/lib/opensearch/data
                - ./config/wazuh-indexer/opensearch-custom.yml:/etc/wazuh-indexer/opensearch.yml:ro
                - ./config/wazuh-indexer/certs:/etc/wazuh-indexer/certs:ro
              # Доп. страховка: фиксим права внутри контейнера (если host chown не сработал)
              user: "0:0"
              command: >
                sh -c "
                  chown -R 1000:1000 /etc/wazuh-indexer/certs || true &&
                  chmod -R a+r /etc/wazuh-indexer/certs || true &&
                  exec /usr/share/wazuh-indexer/bin/opensearch
                "
              healthcheck:
                test: ["CMD-SHELL", "curl -fsSL -u admin:${WAZUH_INDEXER_PASSWORD} https://localhost:9200/_cluster/health?pretty || exit 1"]
                interval: 30s
                timeout: 10s
                retries: 10

            wazuh-manager:
              image: wazuh/wazuh-manager:4.13.1
              container_name: wazuh-manager-new
              restart: unless-stopped
              depends_on:
                wazuh-indexer:
                  condition: service_healthy
              ports:
                - "1514:1514/udp"
                - "1515:1515"
                - "55000:55000"
              environment:
                - WAZUH_INDEXER_URL=https://wazuh-indexer-new:9200
                - WAZUH_INDEXER_USER=admin
                - WAZUH_INDEXER_PASSWORD=${WAZUH_INDEXER_PASSWORD}
                - WAZUH_API_USER=admin
                - WAZUH_API_PASSWORD=${WAZUH_API_PASSWORD}
              volumes:
                - ./config/wazuh-manager:/var/ossec/api/configuration:ro
                - wazuh-manager-data:/var/ossec/data
              healthcheck:
                test: ["CMD-SHELL", "curl -fsSk -u admin:${WAZUH_API_PASSWORD} https://localhost:55000/manager/status || exit 1"]
                interval: 30s
                timeout: 10s
                retries: 10

            wazuh-dashboard:
              image: wazuh/wazuh-dashboard:4.13.1
              container_name: wazuh-dashboard-new
              restart: unless-stopped
              ports: ["443:5601"]
              environment:
                - OPENSEARCH_HOSTS=["https://wazuh-indexer-new:9200"]
                - OPENSEARCH_USERNAME=admin
                - OPENSEARCH_PASSWORD=${WAZUH_INDEXER_PASSWORD}
                - OPENSEARCH_DASHBOARDS_USERNAME=admin
                - OPENSEARCH_DASHBOARDS_PASSWORD=${WAZUH_API_PASSWORD}
                - WAZUH_API_URL=https://wazuh-manager-new:55000
              depends_on:
                wazuh-manager:
                  condition: service_healthy
              healthcheck:
                test: ["CMD-SHELL", "curl -fsSk https://localhost:5601/api/status || exit 1"]
                interval: 30s
                timeout: 10s
                retries: 10

          volumes:
            wazuh-indexer-data:
            wazuh-manager-data:
          YAML

      # --- Старт стекa ---
      - name: Compose up
        run: |
          docker compose up -d
          docker compose ps

      # --- Ожидание здоровья indexer/manager/dashboard ---
      - name: Wait for indexer health
        run: |
          for i in {1..30}; do
            if curl -fsSL -u admin:${WAZUH_INDEXER_PASSWORD} https://localhost:9200/_cluster/health?pretty -k >/dev/null; then
              echo "Indexer is healthy"; exit 0
            fi
            sleep 10
          done
          echo "Indexer failed to become healthy"; docker compose logs wazuh-indexer; exit 1

      - name: Wait for manager health
        run: |
          for i in {1..30}; do
            if curl -fsSk -u admin:${WAZUH_API_PASSWORD} https://localhost:55000/manager/status >/dev/null; then
              echo "Manager is healthy"; exit 0
            fi
            sleep 10
          done
          echo "Manager failed to become healthy"; docker compose logs wazuh-manager; exit 1

      - name: Wait for dashboard health
        run: |
          for i in {1..30}; do
            if curl -fsSk https://localhost:5601/api/status >/dev/null; then
              echo "Dashboard is healthy"; exit 0
            fi
            sleep 10
          done
          echo "Dashboard failed to become healthy"; docker compose logs wazuh-dashboard; exit 1

      # --- Диагностика на случай нештатных ситуаций ---
      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose logs --no-color > compose-logs.txt || true
          tail -n +1 compose-logs.txt | sed -n '1,400p'

