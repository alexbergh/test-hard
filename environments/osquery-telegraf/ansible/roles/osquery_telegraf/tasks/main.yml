---
- name: Ensure prerequisite packages are installed (Debian)
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gnupg
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Add osquery repository key (Debian)
  ansible.builtin.get_url:
    url: https://pkg.osquery.io/deb/osquery.asc
    dest: /usr/share/keyrings/osquery.asc
    mode: "0644"
  when: ansible_facts['os_family'] == 'Debian'

- name: Configure osquery repository (Debian)
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/osquery.asc] https://pkg.osquery.io/deb deb main"
    state: present
    filename: osquery
  when: ansible_facts['os_family'] == 'Debian'

- name: Ensure osquery repository is configured (RedHat)
  ansible.builtin.yum_repository:
    name: osquery
    description: Osquery Packages
    baseurl: https://pkg.osquery.io/rpm/
    gpgcheck: yes
    gpgkey: https://pkg.osquery.io/rpm/RPM-GPG-KEY-osquery
  when: ansible_facts['os_family'] == 'RedHat'

- name: Add InfluxData repository key (Debian)
  ansible.builtin.get_url:
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    dest: /usr/share/keyrings/influxdata-archive_compat.key
    mode: "0644"
  when: ansible_facts['os_family'] == 'Debian'

- name: Configure InfluxData repository (Debian)
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/influxdata-archive_compat.key] https://repos.influxdata.com/{{ ansible_facts['distribution'] | lower }} {{ ansible_facts['distribution_release'] }} stable"
    filename: influxdata
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: Configure InfluxData repository (RedHat)
  ansible.builtin.yum_repository:
    name: influxdata
    description: InfluxData Repository
    baseurl: https://repos.influxdata.com/rhel/{{ ansible_facts['distribution_major_version'] }}/amd64/stable
    gpgcheck: yes
    gpgkey: https://repos.influxdata.com/influxdata-archive_compat.key
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install osquery and telegraf
  ansible.builtin.package:
    name:
      - "osquery={{ osquery_version }}"
      - telegraf
    state: present

- name: Deploy osquery configuration
  ansible.builtin.template:
    src: osquery.conf.j2
    dest: /etc/osquery/osquery.conf
    owner: root
    group: root
    mode: "0640"

- name: Deploy osquery packs directory
  ansible.builtin.copy:
    src: packs/
    dest: /etc/osquery/packs/
    owner: root
    group: root
    mode: "0640"

- name: Deploy telegraf configuration for osquery ingestion
  ansible.builtin.template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.d/osquery.conf
    owner: root
    group: telegraf
    mode: "0640"

- name: Ensure services are enabled and running
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - osqueryd
    - telegraf
