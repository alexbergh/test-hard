---
- name: Ensure OpenSCAP packages are installed (RedHat family)
  ansible.builtin.package:
    name: "{{ openscap_scanner_packages['RedHat'] }}"
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Ensure OpenSCAP packages are installed (Debian family)
  ansible.builtin.package:
    name: "{{ openscap_scanner_packages['Debian'] }}"
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: Create OpenSCAP cache directory
  ansible.builtin.file:
    path: "{{ openscap_cache_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create OpenSCAP results directory
  ansible.builtin.file:
    path: "{{ scap_scan_output_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: Synchronise SCAP content from central repository
  ansible.builtin.get_url:
    url: "{{ scap_datastream_repo_url }}/{{ item.id }}"
    dest: "{{ openscap_cache_dir }}/{{ item.id }}"
    mode: "0644"
    force: true
  loop: "{{ scap_datastreams }}"

- name: Ensure FSTEC extract directory exists
  ansible.builtin.file:
    path: "{{ fstec_oval_extract_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0750"
  when: fstec_oval_enabled

- name: Download FSTEC OVAL archive when URL is accessible
  ansible.builtin.get_url:
    url: "{{ fstec_oval_archive_url }}"
    dest: "{{ fstec_oval_archive_tmp }}"
    mode: "0644"
    force: true
  register: fstec_download
  failed_when: false
  when:
    - fstec_oval_enabled
    - fstec_oval_local_archive | length == 0

- name: Select FSTEC archive path from download
  ansible.builtin.set_fact:
    fstec_oval_archive_path: "{{ fstec_download.dest }}"
  when:
    - fstec_oval_enabled
    - fstec_oval_local_archive | length == 0
    - fstec_download is defined
    - fstec_download.dest is defined
    - (fstec_download.status_code | default(0)) | int < 400

- name: Select FSTEC archive path from local copy
  ansible.builtin.set_fact:
    fstec_oval_archive_path: "{{ fstec_oval_local_archive }}"
  when:
    - fstec_oval_enabled
    - fstec_oval_local_archive | length > 0

- name: Warn when FSTEC archive is unavailable
  ansible.builtin.debug:
    msg: >-
      Не удалось загрузить архив ФСТЭК по адресу {{ fstec_oval_archive_url }}.
      Укажите локальный путь в переменной fstec_oval_local_archive.
    warn: true
  when:
    - fstec_oval_enabled
    - fstec_oval_archive_path is not defined

- name: Extract FSTEC OVAL archive
  ansible.builtin.unarchive:
    src: "{{ fstec_oval_archive_path }}"
    dest: "{{ fstec_oval_extract_dir }}"
    remote_src: true
  when:
    - fstec_oval_enabled
    - fstec_oval_archive_path is defined
    - fstec_oval_archive_path | length > 0

- name: Deploy OpenSCAP scan wrapper
  ansible.builtin.template:
    src: run-openscap-scan.sh.j2
    dest: "{{ openscap_scan_script }}"
    owner: root
    group: root
    mode: "0750"

- name: Deploy systemd service unit
  ansible.builtin.template:
    src: openscap-scan.service.j2
    dest: /etc/systemd/system/openscap-scan.service
    owner: root
    group: root
    mode: "0644"

- name: Deploy systemd timer unit
  ansible.builtin.template:
    src: openscap-scan.timer.j2
    dest: "/etc/systemd/system/{{ openscap_systemd_timer }}"
    owner: root
    group: root
    mode: "0644"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start OpenSCAP timer
  ansible.builtin.systemd:
    name: "{{ openscap_systemd_timer }}"
    state: started
    enabled: true
