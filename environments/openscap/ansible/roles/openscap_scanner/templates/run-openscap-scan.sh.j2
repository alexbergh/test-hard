#!/usr/bin/env bash
set -euo pipefail

REPORT_DIR="{{ scap_scan_output_dir }}"
CACHE_DIR="{{ openscap_cache_dir }}"
TIMESTAMP="$(date +%Y%m%d-%H%M%S)"
HOSTNAME="$(hostname -s)"

mkdir -p "${REPORT_DIR}/${TIMESTAMP}"

for item in {{ scap_datastreams | to_json }}; do
  DATASTREAM_PATH="${CACHE_DIR}/${item['id']}"
  PROFILE_ID="${item['profile']}"
  BENCHMARK_NAME="${item['benchmark'] | replace(' ', '_') }"
  RESULT_PREFIX="${REPORT_DIR}/${TIMESTAMP}/${HOSTNAME}_${BENCHMARK_NAME}"

  if [[ ! -f "${DATASTREAM_PATH}" ]]; then
    echo "Datastream ${DATASTREAM_PATH} missing" >&2
    continue
  fi

  oscap xccdf eval \
    --profile "${PROFILE_ID}" \
    --results "${RESULT_PREFIX}.xml" \
    --report "${RESULT_PREFIX}.html" \
    --oval-results \
    "${DATASTREAM_PATH}"

done

{% if fstec_oval_enabled %}
FSTEC_DIR="{{ fstec_oval_extract_dir }}"
if [[ -d "${FSTEC_DIR}" ]]; then
  FSTEC_LIST=()
{% if fstec_oval_definitions %}
  FSTEC_LIST=(
{% for item in fstec_oval_definitions %}
    "{{ item }}"{% if not loop.last %}
{% endif %}
{% endfor %}
  )
{% else %}
  while IFS= read -r line; do
    if [[ -n "${line}" ]]; then
      line="${line#./}"
      FSTEC_LIST+=("${line}")
    fi
  done < <(cd "${FSTEC_DIR}" && find . -maxdepth 5 -type f -name '*.xml' -print)
{% endif %}
  for relative in "${FSTEC_LIST[@]}"; do
    [[ -z "${relative}" ]] && continue
    definition_path="${FSTEC_DIR}/${relative}"
    if [[ ! -f "${definition_path}" ]]; then
      echo "FSTEC definition ${definition_path} missing" >&2
      continue
    fi
    base_name="$(basename "${relative}" .xml)"
    result_prefix="${REPORT_DIR}/${TIMESTAMP}/${HOSTNAME}_fstec_${base_name}"
    oscap oval eval \
      --results "${result_prefix}.xml" \
      --report "${result_prefix}.html" \
      "${definition_path}" || true
  done
else
  echo "FSTEC content directory ${FSTEC_DIR} missing" >&2
fi
{% endif %}
