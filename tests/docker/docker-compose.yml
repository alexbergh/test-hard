# tests/docker/docker-compose.yml
# Полный compose для профилей: openscap, telemetry, wazuh.
# Требуются локальные файлы:
#
#   ./config/wazuh-indexer/opensearch.yml
#     cluster.name: "wazuh"
#     node.name: "indexer01"
#     network.host: 0.0.0.0
#     discovery.type: single-node
#     plugins.security.disabled: true
#
#   ./config/wazuh-manager/api.yaml
#     host: 0.0.0.0
#     port: 55000
#     https: true
#     ssl:
#       certificate: /var/ossec/api/configuration/ssl/server.crt
#       key: /var/ossec/api/configuration/ssl/server.key
#
#   ./config/telegraf/telegraf.conf (минимальный рабочий конфиг Telegraf — файл
#   должен существовать внутри каталога ./config/telegraf, который монтируется
#   в контейнер)
#     [agent]
#       interval = "10s"
#     [[outputs.influxdb_v2]]
#       urls = ["http://influxdb:8086"]
#       token = "adminadmin"
#       organization = "test"
#       bucket = "telemetry"
#     [[inputs.cpu]] percpu=true; totalcpu=true
#     [[inputs.mem]]
#     [[inputs.net]]

services:
  ##############################################################################
  # OpenSCAP (profile: openscap)
  ##############################################################################
  openscap-runner:
    image: deepsecurity/openscap-scan:1.2.83
    container_name: openscap-runner
    profiles: ["openscap"]
    pull_policy: if_not_present
    restart: unless-stopped
    command: ["sh", "-lc", "sleep infinity"]
    volumes:
      - ./artifacts:/artifacts
    healthcheck:
      test: ["CMD-SHELL", "echo ok"]
      interval: 30s
      timeout: 5s
      retries: 5

  ##############################################################################
  # Telemetry stack (profile: telemetry)
  ##############################################################################
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    profiles: ["telemetry"]
    pull_policy: if_not_present
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminadmin
      DOCKER_INFLUXDB_INIT_ORG: test
      DOCKER_INFLUXDB_INIT_BUCKET: telemetry
      DOCKER_INFLUXDB_INIT_RETENTION: 4w
    volumes:
      - influxdb-data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8086/health | grep -q pass"]
      interval: 15s
      timeout: 5s
      retries: 30

  telegraf-listener:
    image: telegraf:1.29
    container_name: telegraf-listener
    profiles: ["telemetry"]
    pull_policy: if_not_present
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ./config/telegraf:/etc/telegraf:ro
    healthcheck:
      test: ["CMD-SHELL", "telegraf --version >/dev/null 2>&1"]
      interval: 30s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    profiles: ["telemetry"]
    pull_policy: if_not_present
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: adminadmin
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health | grep -q healthy"]
      interval: 15s
      timeout: 5s
      retries: 30

  ##############################################################################
  # Wazuh stack (profile: wazuh)
  ##############################################################################
  wazuh-indexer:
    image: wazuh/wazuh-indexer:4.13.1
    container_name: wazuh-indexer
    profiles: ["wazuh"]
    pull_policy: if_not_present
    restart: unless-stopped
    environment:
      DISCOVERY_SEED_HOSTS: "127.0.0.1"
      NETWORK_HOST: "0.0.0.0"
      CLUSTER_NAME: "wazuh"
      NODE_NAME: "indexer01"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./config/wazuh-indexer/opensearch.yml:/usr/share/wazuh-indexer/opensearch.yml:ro
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-manager:
    image: wazuh/wazuh-manager:4.13.1
    container_name: wazuh-manager
    profiles: ["wazuh"]
    pull_policy: if_not_present
    restart: unless-stopped
    depends_on:
      wazuh-indexer:
        condition: service_healthy
    environment:
      INDEXER_URL: "http://wazuh-indexer:9200"
      FILEBEAT_OUTPUT: "indexer"
      INDEXER_SSL_VERIFICATION: "false"
      API_USERNAME: "admin"
      API_PASSWORD: "SecretPassword!"
    volumes:
      - ./config/wazuh-manager/api.yaml:/var/ossec/api/configuration/api.yaml:ro
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "55000:55000"
    healthcheck:
      test: ["CMD-SHELL", "curl -skf https://localhost:55000 >/dev/null || ss -ltn | grep -q ':1515'"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.13.1
    container_name: wazuh-dashboard
    profiles: ["wazuh"]
    pull_policy: if_not_present
    restart: unless-stopped
    depends_on:
      wazuh-indexer:
        condition: service_healthy
      wazuh-manager:
        condition: service_healthy
    environment:
      OPENSEARCH_HOSTS: '["http://wazuh-indexer:9200"]'
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5601/api/status | grep -q available"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-agent:
    image: wazuh/wazuh-agent:4.13.1
    container_name: wazuh-agent
    profiles: ["wazuh"]
    pull_policy: if_not_present
    restart: unless-stopped
    depends_on:
      wazuh-manager:
        condition: service_started
    environment:
      MANAGER_IP: "wazuh-manager"
      WAZUH_AGENT_NAME: "test-agent-01"
    healthcheck:
      test: ["CMD-SHELL", "sleep 5; ps aux | grep -q '[w]azuh-agentd'"]
      interval: 30s
      timeout: 5s
      retries: 10

volumes:
  influxdb-data:
  grafana-data:
