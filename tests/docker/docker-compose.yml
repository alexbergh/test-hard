# tests/docker/docker-compose.yml  (Compose V2, без ключа version)
services:
  ##############################################################################
  # OpenSCAP (профиль: openscap)
  ##############################################################################
  openscap-runner:
    image: deepsecurity/openscap-scan:latest
    container_name: openscap-runner
    profiles: ["openscap"]
    pull_policy: always
    restart: unless-stopped
    # Артефакты отчётов
    volumes:
      - ./artifacts:/artifacts
    # Не запускаем скан на старте, чтобы up -d не падал, если контента нет.
    # Скрипт/профиль можно дергать вручную: `docker exec openscap-runner oscap ...`
    command: ["sh", "-lc", "sleep infinity"]
    healthcheck:
      test: ["CMD", "sh", "-lc", "oscap --version >/dev/null 2>&1"]
      interval: 30s
      timeout: 5s
      retries: 5

  ##############################################################################
  # Telemetry stack (профиль: telemetry)
  ##############################################################################
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    profiles: ["telemetry"]
    pull_policy: always
    restart: unless-stopped
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
      - DOCKER_INFLUXDB_INIT_ORG=test
      - DOCKER_INFLUXDB_INIT_BUCKET=telemetry
      - DOCKER_INFLUXDB_INIT_RETENTION=4w
    volumes:
      - influxdb-data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8086/health | grep -q 'pass'"]
      interval: 15s
      timeout: 5s
      retries: 20
    ports:
      - "8086:8086"

  telegraf-listener:
    image: telegraf:1.29
    container_name: telegraf-listener
    profiles: ["telemetry"]
    pull_policy: always
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - INFLUX_TOKEN=${INFLUX_TOKEN:-}
    # Пример минимальной конфигурации: метрики в stdout,
    # при необходимости смонтируй свой telegraf.conf
    command: ["--docker"]
    healthcheck:
      test: ["CMD-SHELL", "telegraf --version >/dev/null 2>&1"]
      interval: 30s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    profiles: ["telemetry"]
    pull_policy: always
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=adminadmin
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health | grep -q healthy"]
      interval: 15s
      timeout: 5s
      retries: 20

  ##############################################################################
  # Wazuh stack (профиль: wazuh)
  ##############################################################################
  wazuh-indexer:
    image: wazuh/wazuh-indexer:4.13.1
    container_name: wazuh-indexer
    profiles: ["wazuh"]
    pull_policy: always
    restart: unless-stopped
    environment:
      - "DISCOVERY_SEED_HOSTS=127.0.0.1"
      - "NETWORK_HOST=0.0.0.0"
      - "CLUSTER_NAME=wazuh"
      - "NODE_NAME=indexer01"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-manager:
    image: wazuh/wazuh-manager:4.13.1
    container_name: wazuh-manager
    profiles: ["wazuh"]
    pull_policy: always
    restart: unless-stopped
    depends_on:
      wazuh-indexer:
        condition: service_healthy
    environment:
      - "INDEXER_URL=http://wazuh-indexer:9200"
      - "API_USERNAME=admin"
      - "API_PASSWORD=SecretPassword!"
      - "FILEBEAT_OUTPUT=indexer"
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "55000:55000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:55000 >/dev/null || ss -ltn | grep -q ':1515'"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.13.1
    container_name: wazuh-dashboard
    profiles: ["wazuh"]
    pull_policy: always
    restart: unless-stopped
    depends_on:
      wazuh-indexer:
        condition: service_healthy
      wazuh-manager:
        condition: service_started
    environment:
      - "OPENSEARCH_HOSTS=['http://wazuh-indexer:9200']"
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5601/api/status | grep -q 'available'"]
      interval: 15s
      timeout: 5s
      retries: 40

  wazuh-agent:
    image: wazuh/wazuh-agent:4.13.1
    container_name: wazuh-agent
    profiles: ["wazuh"]
    pull_policy: always
    restart: unless-stopped
    depends_on:
      wazuh-manager:
        condition: service_started
    environment:
      - "MANAGER_IP=wazuh-manager"
      - "WAZUH_AGENT_NAME=test-agent-01"
    # в demo-стенде агент может не иметь host PID/NET — это ок
    healthcheck:
      test: ["CMD-SHELL", "sleep 5; ps aux | grep -q '[w]azuh-agentd' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10

volumes:
  influxdb-data:
  grafana-data:
